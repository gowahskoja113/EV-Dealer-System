name: CI/CD for Spring Boot Application (Local Docker)

on:
  push:
    branches:
      - master # Chạy workflow khi có push lên nhánh 'master' (hoặc 'main')
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: self-hosted # Chạy trên VPS Linux của bạn

    env:
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }} # Tên image Docker (ví dụ: healthcare-app)
      DOCKER_HOST_PORT: ${{ secrets.DOCKER_HOST_PORT }} # Cổng trên máy host (ví dụ: 80)
      APP_INTERNAL_PORT: ${{ secrets.APP_INTERNAL_PORT }} # Cổng mà ứng dụng Spring Boot lắng nghe bên trong container (thường là 8080)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Kéo mã nguồn về runner (trên VPS của bạn)


      - name: Build Docker Image
        run: |
          echo "Building Docker image ${IMAGE_NAME}:latest from Dockerfile..."
          docker build -t $IMAGE_NAME:latest .
          echo "Docker image built successfully: ${IMAGE_NAME}:latest"

      - name: Stop and Remove Old Container (if exists)
        run: |
          echo "Stopping and removing existing container ${IMAGE_NAME}..."
          docker stop $IMAGE_NAME || true
          docker rm $IMAGE_NAME || true
          echo "Old container stopped and removed (if it existed)."

      # --- Bước bổ sung: Xóa image cũ (tùy chọn nhưng được khuyến nghị để tiết kiệm dung lượng) ---
      - name: Clean up old Docker Image (optional)
        run: |
          echo "Cleaning up old Docker image ${IMAGE_NAME}:<previous_tag> (if any not in use)..."
          # Lệnh này sẽ xóa các image không được sử dụng bởi bất kỳ container nào.
          # Cẩn thận nếu bạn muốn giữ lại các phiên bản image cũ để rollback.
          docker image prune -f || true
          echo "Docker images cleaned up."

      - name: Run Docker Container (Inject Environment Variables)
        run: |
          echo "Running new Docker container ${IMAGE_NAME}..."
          docker run -d \
            --name $IMAGE_NAME \
            -p $DOCKER_HOST_PORT:$APP_INTERNAL_PORT \
            $IMAGE_NAME:latest
          echo "New Docker container started successfully, mapped to host port $DOCKER_HOST_PORT."

      - name: Check Running Container Status
        run: |
          echo "Checking status of container ${IMAGE_NAME}..."
          docker ps -f "name=${IMAGE_NAME}"